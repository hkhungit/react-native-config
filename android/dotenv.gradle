import java.util.regex.Matcher
import java.util.regex.Pattern
import groovy.json.JsonSlurper

def getCurrentFlavor() {
  Gradle gradle = getGradle()
  String tskReqStr = gradle.getStartParameter().getTaskRequests()[0].args

  Matcher matcher = Pattern.compile("([A-Z]\\w+)").matcher( tskReqStr )
  if( matcher.find() ) {
    return matcher.group(1).toLowerCase()
  } else {
    return ""
  }
}

def readDotEnv = {
  def envFile = "development"
  if (System.env['ENVFILE']) {
    envFile = System.env['ENVFILE'];
  } else if (project.hasProperty("envConfigFiles")) {
    def possibleFile = project.envConfigFiles.get(getCurrentFlavor())
    if (possibleFile) {
      envFile = possibleFile;
    }
  }

  def env = [:]
  println("Reading env from: $envFile")
  try {
    def inputFile = new File("$project.rootDir/../env.json")
    def InputJSON = new JsonSlurper().parseText(inputFile.text)
    env = InputJSON.get(envFile)
  } catch (FileNotFoundException ex) {
    println("******************************************")
    println("*** Error while reading env.json file ****")
    println("******************************************")
  }
  project.ext.set("env", env)
}

readDotEnv()

android {
  defaultConfig {
    project.env.each { k, v ->
      def escaped = v.replaceAll("%","\\\\u0025")
      buildConfigField "String", k, "\"$v\""
      resValue "string", k, "\"$escaped\""
    }
  }
}
